import{_ as r,E as s,c,m as t,a as e,J as a,w as l,V as n,o as _,aA as d,aB as i,aC as h,aD as u,aE as p}from"./chunks/framework.szLWUyCm.js";const U=JSON.parse('{"title":"一、Servlet的实现","description":"","frontmatter":{},"headers":[],"relativePath":"rear/servlet/Servlet的实现.md","filePath":"rear/servlet/Servlet的实现.md","lastUpdated":null}'),m={name:"rear/servlet/Servlet的实现.md"},v=t("h1",{id:"一、servlet的实现",tabindex:"-1"},[e("一、Servlet的实现 "),t("a",{class:"header-anchor",href:"#一、servlet的实现","aria-label":'Permalink to "一、Servlet的实现"'},"​")],-1),f=t("strong",null,"Servlet",-1),b=t("code",null,"Server",-1),S=t("code",null,"Applet",-1),g=t("strong",null,"Serviet",-1),k=t("code",null,"main()方法",-1),q=t("code",null,"Servlet容器",-1),x=t("code",null,"Tomcat",-1),P=t("strong",null,"提供了 Serviet功能的服务器",-1),T=t("code",null,"Tomcat",-1),w=t("code",null,"Jetty",-1),V=t("code",null,"WebLogic Server",-1),A=t("code",null,"Websphere",-1),J=t("code",null,"JBoss",-1),N=t("strong",null,"过滤器filter",-1),B=t("strong",null,"监听器listener",-1),C=t("h2",{id:"一、创建web项目",tabindex:"-1"},[e("一、创建web项目 "),t("a",{class:"header-anchor",href:"#一、创建web项目","aria-label":'Permalink to "一、创建web项目"'},"​")],-1),E=n('<h3 id="_1、创建项目" tabindex="-1">1、创建项目 <a class="header-anchor" href="#_1、创建项目" aria-label="Permalink to &quot;1、创建项目&quot;">​</a></h3><p><img src="'+d+'" alt="图片"></p><h3 id="_2、新增模块" tabindex="-1">2、新增模块 <a class="header-anchor" href="#_2、新增模块" aria-label="Permalink to &quot;2、新增模块&quot;">​</a></h3><p><img src="'+i+'" alt="图片"></p><p><img src="'+h+'" alt="图片"></p><h3 id="_3、新增框架支持" tabindex="-1">3、新增框架支持 <a class="header-anchor" href="#_3、新增框架支持" aria-label="Permalink to &quot;3、新增框架支持&quot;">​</a></h3><blockquote><p>如果找不到<code>Add framework support</code>，就选中项目，双击<code>shift</code>，点击<code>action</code>，进而搜索</p></blockquote><p><img src="'+u+'" alt="图片"></p><h3 id="_4、项目配置tomcat" tabindex="-1">4、项目配置tomcat <a class="header-anchor" href="#_4、项目配置tomcat" aria-label="Permalink to &quot;4、项目配置tomcat&quot;">​</a></h3><p><img src="'+p+'" alt="图片"></p>',10);function $(D,W,I,y,L,O){const o=s("font");return _(),c("div",null,[v,t("p",null,[e("1、"),f,e(" 是"),b,e(" 与"),S,e(" 的缩写，是"),a(o,{color:"red"},{default:l(()=>[e("服务端小程序")]),_:1}),e("的意思。")]),t("p",null,[e("2、"),g,e(" 本质上也是 Java 类，但要遵循 "),a(o,{color:"red"},{default:l(()=>[e("Servlet规范")]),_:1}),e("进行编写，没有"),k,e("，它的创建、使用、销毁都由 "),q,e("进行管理(如 "),x,e(")。")]),t("p",null,[e("3、"),P,e("，叫做 "),a(o,{color:"red"},{default:l(()=>[e("Servlet 容器")]),_:1}),e("，其常见容器有很多，如 "),T,e(", "),w,e(", "),V,e(", "),A,e(","),J,e(" 等等。")]),t("p",null,[e("4、"),a(o,{color:"red"},{default:l(()=>[e("Servlet是JavaWeb开发的三大组件之一")]),_:1}),e("(另外两个是"),N,e("与"),B,e(")")]),C,t("blockquote",null,[a(o,{color:"red"},{default:l(()=>[e("此教程为练习教程，有很多多余操作，理性执行操作")]),_:1})]),E])}const j=r(m,[["render",$]]);export{U as __pageData,j as default};
