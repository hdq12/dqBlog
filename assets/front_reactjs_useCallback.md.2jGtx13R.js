import{_ as s,c as a,o as i,V as e}from"./chunks/framework.szLWUyCm.js";const u=JSON.parse('{"title":"十一、useCallback--解决memo带来的问题，缓存函数","description":"","frontmatter":{},"headers":[],"relativePath":"front/reactjs/useCallback.md","filePath":"front/reactjs/useCallback.md","lastUpdated":null}'),l={name:"front/reactjs/useCallback.md"},n=e(`<h1 id="十一、usecallback-解决memo带来的问题-缓存函数" tabindex="-1">十一、useCallback--解决memo带来的问题，缓存函数 <a class="header-anchor" href="#十一、usecallback-解决memo带来的问题-缓存函数" aria-label="Permalink to &quot;十一、useCallback--解决memo带来的问题，缓存函数&quot;">​</a></h1><p>在使用memo时，父组件传递的props数据会导致memo失效，重新渲染，这是不可避免的</p><p>但是，如果父组件传递一个函数，函数又不能改变，但是父组件每次重新渲染都会渲染一个函数，从而激发传递子组件的porps，导致memo失效，这会给子组件不必要的渲染</p><p>所以，如果子组件使用了memo，父组件传递的函数应该用useCallback进行包装</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {useCallback} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;react&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> clickHandler</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">useCallback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	//代码</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},[依赖项])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,5),t=[n];function p(r,h,k,c,o,d){return i(),a("div",null,t)}const b=s(l,[["render",p]]);export{u as __pageData,b as default};
