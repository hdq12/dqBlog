import{_ as s,c as a,o as i,V as t}from"./chunks/framework.szLWUyCm.js";const u=JSON.parse('{"title":"六、模板环境","description":"","frontmatter":{},"headers":[],"relativePath":"rear/flask/模板环境.md","filePath":"rear/flask/模板环境.md","lastUpdated":null}'),e={name:"rear/flask/模板环境.md"},n=t(`<h1 id="六、模板环境" tabindex="-1">六、模板环境 <a class="header-anchor" href="#六、模板环境" aria-label="Permalink to &quot;六、模板环境&quot;">​</a></h1><h2 id="一、模版上下文" tabindex="-1">一、模版上下文 <a class="header-anchor" href="#一、模版上下文" aria-label="Permalink to &quot;一、模版上下文&quot;">​</a></h2><h3 id="_1、自定义模板变量" tabindex="-1">1、自定义模板变量 <a class="header-anchor" href="#_1、自定义模板变量" aria-label="Permalink to &quot;1、自定义模板变量&quot;">​</a></h3><blockquote><p>使用<code>set</code>变量定义新变量</p></blockquote><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> name=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;admin&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> %</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>使用<code>set</code>赋值语句创建的变量在其之后都是有效的。如果不想让一个变量污染全局环境，可以使用<code>with</code>语句来创建一个作用域</p></blockquote><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> with</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> %</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> foo=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">42</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> %</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	{{ foo }}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> endwith </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_2、jinja2内置变量" tabindex="-1">2、Jinja2内置变量 <a class="header-anchor" href="#_2、jinja2内置变量" aria-label="Permalink to &quot;2、Jinja2内置变量&quot;">​</a></h3><table><thead><tr><th>变量</th><th>描述</th></tr></thead><tbody><tr><td><code>g</code></td><td>当前请求中的全局对象。一般会把当前请求中多个地方需要用到的变量绑定到上面</td></tr><tr><td><code>request</code></td><td>当前请求对象。通过它可以获取请求的信息</td></tr><tr><td><code>session</code></td><td>当前请求的session对象</td></tr><tr><td><code>config</code></td><td>项目的配置对象</td></tr></tbody></table><h3 id="_3、自定义上下文处理器" tabindex="-1">3、自定义上下文处理器 <a class="header-anchor" href="#_3、自定义上下文处理器" aria-label="Permalink to &quot;3、自定义上下文处理器&quot;">​</a></h3><blockquote><p>使用<code>@app.context_processor</code></p></blockquote><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@app.context_processor</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> context_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">():</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    user</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;username&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;admin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;level&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;user&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:user}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="二、全局函数-模板内使用" tabindex="-1">二、全局函数（模板内使用） <a class="header-anchor" href="#二、全局函数-模板内使用" aria-label="Permalink to &quot;二、全局函数（模板内使用）&quot;">​</a></h2><h3 id="_1、自定义全局函数" tabindex="-1">1、自定义全局函数 <a class="header-anchor" href="#_1、自定义全局函数" aria-label="Permalink to &quot;1、自定义全局函数&quot;">​</a></h3><blockquote><p>如果要实现自定义的全局函数，可以通过<code>app.template_global</code>装饰器来实现</p></blockquote><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@app.template_global</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> welcome</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;欢迎！</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>模板内使用</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">div</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{ welcome(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;张三&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)}}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">div</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_2、内置全局函数" tabindex="-1">2、内置全局函数 <a class="header-anchor" href="#_2、内置全局函数" aria-label="Permalink to &quot;2、内置全局函数&quot;">​</a></h3><p>1、<code>Jinja2</code>内置的全局函数（<a href="https://jinja.palletsprojects.com/en/3.0.x/templates/#list-of-global-functions%EF%BC%89" target="_blank" rel="noreferrer">https://jinja.palletsprojects.com/en/3.0.x/templates/#list-of-global-functions）</a></p><table><thead><tr><th>函数名</th><th>描述</th></tr></thead><tbody><tr><td><code>range(start,stop,step)</code></td><td>获取一个等差级数的列表，与python中的<code>range</code>一样</td></tr><tr><td><code>lipsum(n=5,html=True,min=20,max=100)</code></td><td>在模板中生成随机的文本，默认会生成5段HTML代码，每段是20~100个字符。如果html设置为False，那么返回纯文本内容</td></tr><tr><td><code>dict(**items)</code></td><td>转换为字典，与Python的<code>dict</code>一样</td></tr></tbody></table><p>2、<code>Flask</code>内置的全局函数</p><table><thead><tr><th>函数名</th><th>描述</th></tr></thead><tbody><tr><td><code>url_for</code></td><td>用于加载静态文件，或者用于构建URL</td></tr><tr><td><code>get_flashed_message</code></td><td>用于获取闪现消息</td></tr></tbody></table><h2 id="三、flask模板环境" tabindex="-1">三、Flask模板环境 <a class="header-anchor" href="#三、flask模板环境" aria-label="Permalink to &quot;三、Flask模板环境&quot;">​</a></h2><blockquote><p>在Flask中使用jinja2，使用<code>app.jinja_env</code>属性来配置模板</p></blockquote><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td><code>app.jinja_env.autoescape=Flase</code></td><td>设置autoesscape（全局转义）</td></tr><tr><td><code>app.jinja_env.filters</code></td><td>添加过滤器</td></tr><tr><td><code>app.jinja_env.globals[&quot;user&quot;]=user</code></td><td>添加全局对象</td></tr><tr><td><code>app.jinja_env.tests</code></td><td>添加测试器</td></tr></tbody></table>`,26),l=[n];function h(p,d,r,o,k,c){return i(),a("div",null,l)}const g=s(e,[["render",h]]);export{u as __pageData,g as default};
