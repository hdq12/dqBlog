import{_ as a,c as s,o as e,V as i}from"./chunks/framework.szLWUyCm.js";const _=JSON.parse('{"title":"十三、React.forwardRef暴露ref","description":"","frontmatter":{},"headers":[],"relativePath":"front/reactjs/React.forwardRef.md","filePath":"front/reactjs/React.forwardRef.md","lastUpdated":null}'),r={name:"front/reactjs/React.forwardRef.md"},t=i(`<h1 id="十三、react-forwardref暴露ref" tabindex="-1">十三、React.forwardRef暴露ref <a class="header-anchor" href="#十三、react-forwardref暴露ref" aria-label="Permalink to &quot;十三、React.forwardRef暴露ref&quot;">​</a></h1><p>包装组件，使外部组件能通过ref来访问组件dom</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> App</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">React.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forwardRef</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((props,ref))</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    //ref是使用React.forwardRef之后新增的参数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>但如果直接暴露出去，会很危险，所以要限制它，要使用<code>useImperativeHandle</code></p>`,4),n=[t];function p(l,d,o,c,h,f){return e(),s("div",null,n)}const m=a(r,[["render",p]]);export{_ as __pageData,m as default};
