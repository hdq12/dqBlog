import{_ as t,c as s,o as a,V as i}from"./chunks/framework.szLWUyCm.js";const g=JSON.parse('{"title":"二、HTTP请求方法","description":"","frontmatter":{},"headers":[],"relativePath":"rear/flask/HTTP请求方法.md","filePath":"rear/flask/HTTP请求方法.md","lastUpdated":null}'),e={name:"rear/flask/HTTP请求方法.md"},d=i(`<h1 id="二、http请求方法" tabindex="-1">二、HTTP请求方法 <a class="header-anchor" href="#二、http请求方法" aria-label="Permalink to &quot;二、HTTP请求方法&quot;">​</a></h1><p>HTTP请求方法及使用方法</p><table><thead><tr><th>请求方法</th><th>描述</th></tr></thead><tbody><tr><td><code>GET</code></td><td>从服务器获取资源。在浏览器中输入网址访问默认用的GET请求</td></tr><tr><td><code>POST</code></td><td>提交资源到服务器，如提交表单或者上传文件，一般用于创建新资源或者修改已有的资源</td></tr><tr><td><code>HEAD</code></td><td>类似于GET请求，响应中不包含具体的内容，用于获取消息头</td></tr><tr><td><code>DELETE</code></td><td>请求服务器删除资源</td></tr><tr><td><code>PUT</code></td><td>请求服务器替换或者修改已有的资源</td></tr><tr><td><code>OPTIONS</code></td><td>请求服务器返回某个资源所支持的<code>所有HTTP请求方法</code>。如AJAX跨域请求常用OPTIONS方法发送嗅探请求，来判断是否对某个资源访问的<code>权限</code></td></tr><tr><td><code>PATCH</code></td><td>与PUT方法类似，但是PATCH方法<code>一般用于局部资源更新</code>，PUT方法用于整个资源的替换</td></tr></tbody></table><h2 id="一、在flask项目中使用" tabindex="-1">一、在Flask项目中使用 <a class="header-anchor" href="#一、在flask项目中使用" aria-label="Permalink to &quot;一、在Flask项目中使用&quot;">​</a></h2><blockquote><p>flask项目中，默认请求是<code>GET</code>请求</p></blockquote><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@app.route</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/blog/query&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> blog_query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">():</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;使用GET方法查询博客&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>切换为<code>POST</code>请求</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@app.route</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/blog/add&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">methods</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;POST&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> blog_add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">():</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;使用POST方法添加博客&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="二、使用装饰器定义路由" tabindex="-1">二、使用装饰器定义路由 <a class="header-anchor" href="#二、使用装饰器定义路由" aria-label="Permalink to &quot;二、使用装饰器定义路由&quot;">​</a></h2><p>快捷路由装饰器</p><table><thead><tr><th>快捷路由装饰器</th><th>描述</th></tr></thead><tbody><tr><td>app.get(&quot;/login&quot;)</td><td>等价与app.route(&quot;/login&quot;,methods=[&quot;GET&quot;])</td></tr><tr><td>app.post(&quot;/login&quot;)</td><td>等价与app.route(&quot;/login&quot;,methods=[&quot;POST&quot;])</td></tr><tr><td>app.put(&quot;/login&quot;)</td><td>等价与app.route(&quot;/login&quot;,methods=[&quot;PUT&quot;])</td></tr><tr><td>app.delete(&quot;/login&quot;)</td><td>等价与app.route(&quot;/login&quot;,methods=[&quot;DELETE&quot;])</td></tr><tr><td>app.patch(&quot;/login&quot;)</td><td>等价与app.route(&quot;/login&quot;,methods=[&quot;PATCH&quot;])</td></tr></tbody></table>`,11),n=[d];function o(l,p,h,r,k,u){return a(),s("div",null,n)}const E=t(e,[["render",o]]);export{g as __pageData,E as default};
